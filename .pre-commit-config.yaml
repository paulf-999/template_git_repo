---
# all commands by default will run on every commit
default_install_hook_types: [pre-commit, commit-msg]
default_stages: [commit]
# some configs are only available after v2.18
minimum_pre_commit_version: '2.18'
repos:
    # Git hooks
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.4.0
      hooks:
          - id: no-commit-to-branch # prevents users from pushing changes to specific (protected) branches
            args: [--branch, develop, --branch, main, --pattern, release/.*]
            name: Git checks - committed to protected Git branch?
          - id: check-merge-conflict # checks for files that contain merge conflict strings.
            name: Git checks - any merge conflicts?

    - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
      rev: v9.22.0
      hooks:
          - id: commitlint # validate Git commit messages
            name: Git checks - Git commit validation
            stages: [commit-msg]
            additional_dependencies: ['@commitlint/config-conventional']

    - repo: local
      hooks:
          - id: git_branch_name_validation # Custom Git branch validation hook
            name: Git checks - Git branch name validation
            description: This hook validates the Git branch name.
            entry: src/sh/pre_commit_hooks/git_validate_branch_name.sh
            language: script
            pass_filenames: false
    # Shell script validation hook - ensures shell scripts conform to shellcheck
    - repo: https://github.com/jumanjihouse/pre-commit-hooks
      rev: 3.0.0
      hooks:
          - id: shellcheck # Ensure shell scripts conform to shellcheck
            name: Shell script checks - linter (using shellcheck)
    # Makefile linter
    - repo: https://github.com/mrtazz/checkmake.git
      rev: 0.2.2
      hooks:
          - id: checkmake
            name: Makefile check - linter
    # YAML hooks
    - repo: https://github.com/adrienverge/yamllint.git
      rev: v1.30.0
      hooks:
          - id: yamllint # Lint YAML files using rules specified in .yamllint
            args: [-c=.yamllint]
            name: YAML checks - linter (using yamllint)
    - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
      rev: 0.2.1
      hooks:
          - id: yamlfmt # yamlfmt - fix input yaml files
            name: YAML fixes
  # Python - fixes
  # üßπ Ruff ‚Äî fast linter, formatter, and import sorter
    - repo: https://github.com/astral-sh/ruff-pre-commit
      rev: v0.9.2
      hooks:
          - id: ruff
            name: Python fixes & lint ‚Äî Ruff
        # Enable complexity checks
            args: [--line-length=120, --select=E, F, W, C90]

  # üîÅ Pyupgrade ‚Äî automatically modernise syntax
    - repo: https://github.com/asottile/pyupgrade
      rev: v3.3.1
      hooks:
          - id: pyupgrade
            name: Python fixes ‚Äî Upgrade syntax to Python 3.6+
            args: [--py36-plus]

  # ‚úÖ Check for valid Python syntax (AST)
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.4.0
      hooks:
          - id: check-ast
            name: Python checks ‚Äî Valid syntax?

          - id: name-tests-test
            name: Python checks ‚Äî pytest test files named correctly?
            args: [--pytest-test-first]

  # üìö Interrogate ‚Äî docstring coverage checks
    - repo: https://github.com/econchick/interrogate
      rev: 1.5.0
      hooks:
          - id: interrogate
            name: Python checks ‚Äî Docstrings coverage
            args: [--quiet, --fail-under=90]
    # General/housekeeping hooks
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.4.0
      hooks:
          - id: end-of-file-fixer # ensures that a file is either empty, or ends with one newline.
            name: General fixes - fix end of files
          - id: trailing-whitespace # trims trailing whitespace.
            name: General fixes - trim trailing whitespace
          - id: fix-byte-order-marker # removes utf-8 byte order marker.
            name: General fixes - fix utf-9 byte order marker
          - id: mixed-line-ending # replaces or checks mixed line ending.
            name: General fixes - fix mixed line endings
          - id: check-added-large-files # prevents giant files from being committed.
            name: General checks - any large files added?
          - id: check-case-conflict # checks for files that would conflict in case-insensitive filesystems.
            name: General checks - any string case conflicts?
          - id: detect-private-key # checks for the existence of private keys.
            name: General checks - private key added?
